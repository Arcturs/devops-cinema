name: CI-CD jobs

on:
  push:
    branches:
      - '**'

jobs:
  build-backend:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build backend
        run: |
          cd backend
          mvn clean package -B -DskipTests

  test-backend:
    needs: build-backend
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Test backend
        run: |
          cd backend
          mvn clean verify

  build-frontend:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

  deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build backend image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/cinema-backend:latest ./backend

      - name: Build frontend image
        run: |
          docker build --build-arg VITE_API_BASE=http://localhost:8080 -t ${{ secrets.DOCKER_HUB_USERNAME }}/cinema-frontend:latest ./frontend

      - name: Push images
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cinema-backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cinema-frontend:latest

